//#1 Print all the subsequences
import java.io.*;
import java.lang.*;
import java.util.*; 
class HelloWorld {
    public static void f(int ind, int[] arr, ArrayList<Integer> al){
      if(ind==arr.length){
        for(int i=0 ; i<al.size() ; i++){
         System.out.print(al.get(i)+" ");
        }
        if(ind!=0 && al.size()==0)
         System.out.print("{ }");
    System.out.println();
     return;
      }
      al.add(arr[ind]);
      f(ind+1, arr, al);
      al.remove(al.size()-1);
      f(ind+1, arr, al);
    }
    public static void main(String[] args) throws IOException {
     BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
     int n=Integer.parseInt(br.readLine().trim());
     int[] arr=new int[n];
     String[] s=br.readLine().trim().split(" ");
     for(int i=0 ; i<n ; i++){
      arr[i]=Integer.parseInt(s[i]);
     }
     ArrayList<Integer> al=new ArrayList<Integer>();
     f(0, arr,al);
    }
}
O/P: 
3
3 1 2
3 1 2 
3 1 
3 2 
3 
1 2 
1 
2 
{ }

//#2 Print all the subsequences whose sum is equal to k.
import java.io.*;
import java.lang.*;
import java.util.*; 
class HelloWorld {
    public static void f(int ind, int[] arr, ArrayList<Integer> al){
      if(ind==arr.length){
        for(int i=0 ; i<al.size() ; i++){
         System.out.print(al.get(i)+" ");
        }
        if(ind!=0 && al.size()==0)
         System.out.print("{ }");
    System.out.println();
     return;
      }
      al.add(arr[ind]);
      f(ind+1, arr, al);
      al.remove(al.size()-1);
      f(ind+1, arr, al);
    }
    public static void main(String[] args) throws IOException {
     BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
     int n=Integer.parseInt(br.readLine().trim());
     int[] arr=new int[n];
     String[] s=br.readLine().trim().split(" ");
     for(int i=0 ; i<n ; i++){
      arr[i]=Integer.parseInt(s[i]);
     }
     ArrayList<Integer> al=new ArrayList<Integer>();
     f(0, arr,al);
    }
}
O/P:
4
1 2 1 3
2
1 1 
2

//#3 Print any subsequence whose sum = k.
import java.io.*;
import java.lang.*;
import java.util.*; 
class HelloWorld{
    // public static int flag=0; 
    // instead of doing it by the help of global variable flag, we do it by the help of functional methods and without flag
    public static int f(int ind, int[] arr, ArrayList<Integer> al, int s, int sum){
         if(s==sum){
        //   flag=1;
          for(int i=0 ; i<al.size() ; i++){
          System.out.print(al.get(i)+" ");
        } return 1;}
       if(ind==arr.length){
     return 0;
      }
      s=s+arr[ind];
      al.add(arr[ind]);
      int l=f(ind+1, arr, al, s, sum);
      if(l==1) return 1;
      s=s-arr[ind];
      al.remove(al.size()-1);
      int m=f(ind+1, arr, al, s, sum);
      if(m==1) return 1;
     return 0;
    }
    public static void main(String[] args) throws IOException {
     BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
     int n=Integer.parseInt(br.readLine().trim());
     int[] arr=new int[n];
     String[] s=br.readLine().trim().split(" ");
     int sum=Integer.parseInt(br.readLine().trim());
     for(int i=0 ; i<n ; i++){
      arr[i]=Integer.parseInt(s[i]);
     }
     ArrayList<Integer> al=new ArrayList<Integer>();
     f(0, arr,al, 0, sum);
    }
}
O/P:
4
1 2 1 3
2
1 1

//#4 Print the count of those subsequences whose sum = k.

O/P:
4
1 2 1 3
2
...
